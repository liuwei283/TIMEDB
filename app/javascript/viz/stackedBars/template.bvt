// //测试 我就是加注释略略略
// //改完bug我就是不报错

svg {
	//width = data.classifications.length*gridwidth  + 100
	//height = 800
	Component {
		XYPlot {
			x = 140;y = 60
			width = data.classifications.length*gridwidth ;height = height; 
			discreteCategory = true
			valueRange = [0,1]
			data = data.result
			stackedData = {
				stacked: data.categories
			}
			StackedBars {
				data = "stacked"		  
				:children(d){
					Rect.full{
						fill = color["C"+d.key]
						width = gridwidth-padding
						//x = 50%
						stroke = "white"
						anchor = @anchor("top","center")
						behavior:tooltip{
                            content = `Sample Name: ${d.data.pos} <br> Category: ${"C"+d.key} <br> Value: ${d.data.value} <br>`
                        }
					}
				}
				// width = 100%
				// height = 100%
				// stroke = "none"
				// fill = "none"
			}
			Text.centered{
				x = 50%; y = height + 60 + maxsamplelen
				anchor = @anchor("middle","center")
				text = "Sample Name"
				fill = "#000"
				fontSize = 14
			}
			// Text{
			// 	x = 50%; y = -15
			// 	anchor = @anchor("middle","center")
			// 	text = title
			// 	fill = "#000"
			// 	fontSize = 15
			// }
			// Component{
			// 	x = -40; y = 50%
			// 	rotation = @rotate(-90)
			// 	Text{
			// 		text = "Value"
			// 		fill = "#000"
			// 		anchor = @anchor("middle","center")
			// 		fontSize = 14
			// 	}
			// }
			Rect{
				x = -gridwidth/2
				width = 100%
				height = 100%
				stroke = "#000"
				fill = "none"
			}
			//Axis("bottom") { y = 100% }
			Axis("bottom") {
				y = 100%
            	:label(tick) {
            		Text(tick.value) {
            			@let tickX = @scaled-x(tick.value)
            			@let tickY = 5
            			y = 10
						x = -gridwidth/2
            			anchor = @anchor("r", "m")
            			rotation = @rotate(-angle) //旋转的角度
        				fontSize = bottomfontsize
            		}
                }
            }
			Axis("left"){x = -5}
			Container{
				x = -110; y = 10%
				Container{
					Rect {
						anchor = @anchor("middle","left")
						width = 80
						height = data.categories.length * 17
						stroke = "#000"
						fill = "none"
					}
				}
				@for (item, index) in data.categories {
					Rect {
						key = index
						x = 10
						y = (index) * 15 - 35
						height = 5
						width = 20
						anchor = @anchor("middle","left")
						// fill = color["C"+item]
						fill = color["C"+item]
					}
					Text{
						key = index
						x = 40
						y = (index) * 15 - 35
						anchor = @anchor("middle","left")
						text = "C"+item
						fill = "#000"
						fontSize = 10
					}
				}
			}
		}
	}
}