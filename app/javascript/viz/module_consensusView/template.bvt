svg{
    Component {
        Container {
            //x = 600 + 40;y = 300
            // x = 700;y = 300
            //title block
            // Container {
            //     x = 80;y = 100
            //     Rect {
            //         height = 20;width = 600
            //         fill = "yellow"
            //     }
            //     Text {
            //         text = "Boxplot method:" + "METHOD" + "Pieplot sample:" + "SAMPLE"
            //     }
            // }
            //boxplot block
            @if(showbox){
                Container.centered {
                //x = 80;
                x = 700
                y = 300 //换位置
                XYPlot {
                    height = plotData.boxData.bheight
		            width = plotData.boxData.bwidth
		            data = { boxData: plotData.boxData.boxPlotdata }
	                valueRange = plotData.boxData.valueRange
		            Rect{
                        width = 100%
			            height = 100%
			            stroke = "#000"
			            fill = "none"
		            }
		            Boxes {
                        showMean = true
			            data = "boxData"
			            :box (_d) {
                            Rect.full  {
                                //@expr console.log("_d:",plotData.common.celllist[_d.pos])
					            //fill = "#00000000"
                                fill = piecolormap[plotData.common.celllist[_d.pos]]
					            stroke = piecolormap[plotData.common.celllist[_d.pos]]
                                //stroke = "black"
					            x = 33%
					            width = 33%
                                // @expr console.log("_d:",_d)
                                behavior:tooltip {
                                    content = (`
                                        Method: ${plotData.chosenMethod}<br>
										Pos: ${_d.pos}<br>
                            			Min: ${_d.data[0].toFixed(2)} <br>
										First quartile: ${_d.data[1].toFixed(2)} <br>
										Median: ${_d.data[2].toFixed(2)} <br>
										Third quartile: ${_d.data[3].toFixed(2)} <br>
										Max: ${_d.data[4].toFixed(2)} <br>
                                    `)
                        		}
				            }
			            }
			            :median(d) {
				            Line {x1 = 33%; x2 = 66%; stroke = "#800080"; 
                            //dashArray = "2, 2"
                            }
			            }
			            :mean(means) {
				            Line {x1 = 33%; x2 = 66%; stroke = "black"}
			            }
			            :whiskle (d) {
				            Line { x1 = 41.25%; x2 = 57.75%; y1 = 0; y2 = 0; stroke = "#000" }
				            Line { x1 = 41.25%; x2 = 57.75%; y1 = 100%; y2 = 100%; stroke = "#000" }
				            Line { x1 = 50%; x2 = 50%; y1 = 0; y2 = 100%; stroke = "#0078d7";}
			            }
		            }
		            // Axis("bottom"){ y = 100% }
        		    Axis("bottom") {
                        y = 100%
                        :label(tick) {
                            Text(tick.value) {
            		            @let tickX = @scaled-x(tick.value)
            		            @let tickY = 5
            		            y = 10
            		            anchor = @anchor("r", "m")
            		            rotation = @rotate(-45)
        			            fontSize = plotData.boxData.fontSize
            	            }
        	            }
                    }
		            Axis("left");
		
	            }
            }
            }
            
            // pie block
            @if(showpie){
                Container.centered {
                    x = 700; y = 300
                    PieChart {
                        // x = 10 + plotData.boxData.bwidth + 20;//padding = 20 中间空下来的
                        // y = 150
                        x = 10
                        y = 150
			            height = plotData.pieData.pr*2; width = plotData.pieData.pr*2
			            data = plotData.pieData.piePlotdata
                        @expr console.log("pie data:",plotData.pieData.piePlotdata)
			            pieProps = {
				            stroke: "white"
			            }
                        :children(d) {
                            Arc {
                                x1 = d.start; x2 = d.end
                                r2 = plotData.pieData.pr
                                fill = piecolormap[d.data.name]
                                behavior:tooltip {
                                    content = "Category: "+ d.data.name+ "</br>Value: "+ d.data.value.toFixed(3) + "</br>" +"Proportion:" + ((d.end-d.start)*100/360).toFixed(1) +"%"
                                }  
                            }
				        }
		            }
                    //pie legend
                    Container{
                        // x = 10 + plotData.boxData.bwidth + 20 + plotData.pieData.pheigth;
                        // y = 120
                        x = 20 + 2*plotData.pieData.pr;
                        y = 120
                        @if(plotData.common.celllist.length>20){
                            Rect {
					            x = 30; y = 25
                	            width = 320;height = plotData.common.celllist.length/2 *12 + 10 + 15
                	            stroke = "black"
                	            fill = "none"
            	            } 
			            }
                        @else{
                            Rect {
					            x = 30; y = 25
                	            width = 180;height = plotData.common.celllist.length *12 + 10
                	            stroke = "black"
                	            fill = "none"
            	            }   
			            }
			            @for (item, index) in plotData.common.celllist {
                            @if(plotData.common.celllist.length>20){
                                @if(index < plotData.common.celllist.length/2 + 1){
                                    Rect {
							            key = index
                    		            x = 35;y = (plotData.common.celllist.length - index - plotData.common.celllist.length/2 +1) * 12 -2.5 + 30
                    		            height = 5;width = 12
                    		            fill = piecolormap[item]
                		            }
						        Text {
							        key = index
                                    //840 => 30
                    		        x = 55;y = (plotData.common.celllist.length - index - plotData.common.celllist.length/2 +1) * 12 - 5 + 30
                    		        text = item
                    		        fill = "#000"
                    		        fontSize = 10
                		        }
					        }
                            @else{
                                Rect {
                                    key = index
                    		        x = 195;y = (plotData.common.celllist.length - index -1/2) * 12 -2.5 + 30
                    		        height = 5;width = 12
                    		        fill = piecolormap[item]
                		        }
                                Text {
							        key = index
                    		        x = 215;y = (plotData.common.celllist.length - index - 1/2) * 12 - 5 + 30
                    		        text = item
                    		        fill = "#000"
                    		        fontSize = 10
                		        }
					        }
				        }
                        @else{
                            Rect {
						        key = index
                    	        x = 35;y = (plotData.common.celllist.length - index) * 12 -2.5 + 30
                    	        height = 5;width = 12
                    	        fill = item.fill
                	        }
                            Text {
                                key = index
                    	        x = 55;y = (plotData.common.celllist.length - index) * 12 - 5 + 30
                    	        text = item.label
                    	        fill = "#000"
                    	        fontSize = 10
                	        }
				        }
                
                    }
                }

            }
            }



        }
        


    }
}
