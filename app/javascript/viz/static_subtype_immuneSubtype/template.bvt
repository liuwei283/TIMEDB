svg {
	width = 1800
	height = 700
	Component {
		x = 100
		y = 100
		Text {
			x = -75; y = -55
			text = "Hover on the acronym to show the full name"
		}
		Legend {
			x = -75; y = startY
			data = ClinicalData.colorMap.legendData()
		}
		// @let widBar = 80*Object.keys(ClinicalData.widMap).length
		ComplexStackedBar {
			x = startX
			y = startY
			baseWidth = 40
			plotSize = [width, height]
			rotation = @rotate(plotRotation)
			yAxis.rotation = @rotate(yRotation)
			@props ClinicalData
			colorMap = groups
			generateTooltip = (d) => {
				return "Category name: "+d.data.pos.split("__").join("</br>type: ").split("_").join(" ") +  "</br>Total sample: "  + ClinicalData.widMap[d.data.pos] + " samples<br>" 
						+ d.key + " : " + (100 * d.data.value).toFixed(2) + "%"
			}
			:xAxis {
                Axis("top") {
                    line.stroke = "none"
                    tick.stroke = "none"
					:label(tick) {
						Component {
							@let txt = tick.value.split("__")
							y = -10
							Text {
								rotation = @rotate(xRotation)
								y = height + 20
								text = ClinicalData.widMap[tick.value]
								anchor = @anchor("m", "c")
								fontSize = labelSize
							}
							Text {
								rotation = @rotate(xRotation)
								@let t1 = txt[0].split("_").map(d=>d.split(" ")).flat().map(d => d[0].toUpperCase()+".").join(" ")
								// rotation = @rotate(txt[0].length>=10 || txt[1].length>=10 ? 15: 0)
								y = -15
								text = txt[0].length >= 10 ? t1: txt[0];
								anchor = @anchor("m", "c")
								fontSize = labelSize
								behavior:tooltip {
									content = txt[0].split("_").map(d => d[0].toUpperCase()+d.slice(1)).join(" ")
								}
							}
							Text {
								rotation = @rotate(xRotation)
								@let t1 = txt[1].split("_").map(d=>d.split(" ")).flat().map(d => d[0]).join(". ")
								text = txt[1].length <= 10 ? txt[1]: t1.length <=8? t1: (t1.slice(0,7)+"..")
								anchor = @anchor("m", "c")
								fontSize = labelSize
								behavior:tooltip {
									content = txt[1]
								}
							}
						}
					}
                }
			}
		}
		// Container {
		// 	y = startY + height
		// 	anchor = @anchor("b", "l")
		// 	Text {
		// 		x = -90
		// 		y = 200
		// 		text = "Full name of acronyms"
		// 	}
		// 	Columns {
		// 		x = -90
		// 		y = 220
		// 		Rows {
		// 			@let rows = acronyms.slice(0, 60)
		// 			@for (acronym, index) in rows {
		// 				Container {
		// 					padding = 1
		// 					Text {
		// 						text = acronym
		// 						fontSize = 8
		// 					}
		// 				}
		// 			}
		// 		}
		// 		Rows {
		// 			x = 10
		// 			@let rows = acronyms.slice(60)
		// 			@for (acronym, index) in rows {
		// 				Container {
		// 					padding = 1
		// 					Text {
		// 						text = acronym
		// 						fontSize = 8
		// 					}
		// 				}
		// 			}
		// 		}
		// 	}
		// }
	}
}